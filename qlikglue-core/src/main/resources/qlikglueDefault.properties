
qlikload.app-name = baseball stats

qlikglue.encoder.threads = 2
qlikglue.encoder.class = qlikglue.encoder.NullEncoder
#qlikglue.encoder.class = qlikglue.encoder.JsonEncoder
#qlikglue.encoder.delimiter = 001
qlikglue.encoder.delimiter = 0124
qlikglue.encoder.tx-optype = false
qlikglue.encoder.tx-optype-name = txoptype
qlikglue.encoder.tx-timestamp = false
qlikglue.encoder.tx-timestamp-name = txtimestamp
qlikglue.encoder.tx-position = false
qlikglue.encoder.tx-position-name = txposition
qlikglue.encoder.user-token = false
qlikglue.encoder.user-token-name = usertokens

# replace newline characters found in Strings
qlikglue.encoder.replace-newline = false
# qlikglue.encoder.newline-char defaults to " " (blank)
# set to another value if desired.

qlikglue.event.header-optype = true
qlikglue.event.header-timestamp = true
qlikglue.event.header-rowkey = true
qlikglue.event.header-avropath = false
qlikglue.event.avro-hdfs-schema-path = hdfs:///user/flume/gg-data/avro-schema/
qlikglue.event.generate-avro-schema = false
qlikglue.event.avro-namespace = default
qlikglue.event.avro-schema-path = ./gghadoop/avro

#
#qlikglue.publisher.class = qlikglue.publisher.console.ConsolePublisher
qlikglue.publisher.class = qlikglue.publisher.qlik.QlikPublisher
qlikglue.publisher.threads = 1
qlikglue.publisher.hash = table

qlikglue.kafka.topic = mytopic
qlikglue.kafka.batchSize = 100
qlikglue.kafka.flushFreq = 500
qlikglue.kafka.metadata.broker.list = localhost:9092
qlikglue.kafka.metadata.helper.class = qlikglue.publisher.kafka.KafkaMessageDefaultMeta

qlikglue.kafka.serializer.class = kafka.serializer.DefaultEncoder
qlikglue.kafka.key.serializer.class = kafka.serializer.StringEncoder
qlikglue.kafka.request.required.acks = 1

qlikglue.flume.host = localhost
qlikglue.flume.port = 5000
qlikglue.flume.rpc.retries = 5
qlikglue.flume.rpc.retry-delay = 10



# replace special characters that are valid in RDBMS table/column
# names, but are not valid in hive/hbase/nosql/etc. names.
# Note that these are "schemadef" properties and not qlikglue
# properties, but they are still specified in this file.
schemadef.replace.invalid_char = _
schemadef.replace.invalid_first_char = x
schemadef.replace.regex = [^a-zA-Z0-9_\\.]
    
    

    
